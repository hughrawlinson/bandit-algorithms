import Head from "next/head";
import { Line } from "@nivo/line";
import { ArmName } from "../../bandits";
import styles from "../styles/Chart.module.css";
import * as epsilonGreedyBanditTestResultData from "../../results/epsilon-greedy.json";
import * as softmaxBanditTestResultData from "../../results/softmax.json";

interface TrialResult {
  chosenArm: ArmName;
  reward: number;
  cumulativeReward: number;
}

function prepareData(data: typeof epsilonGreedyBanditTestResultData) {
  let simNumbers = data.simNums.filter(
    (simNum, index) => index === data.simNums.indexOf(simNum)
  );

  // assumption: all sims have the same horizon
  let horizon = data.simNums.length / simNumbers.length;

  let sims = new Array(simNumbers.length);

  for (let i = 0; i < simNumbers.length; i++) {
    let sim = {
      id: simNumbers[i],
      trials: new Array(horizon) as TrialResult[],
    };
    for (let j = 0; j < horizon; j++) {
      sim.trials[j] = {
        chosenArm: data.chosenArms[i * horizon + j] as ArmName,
        reward: data.rewards[i * horizon + j],
        cumulativeReward: data.cumulativeRewards[i * horizon + j],
      };
    }
    sims[i] = sim;
  }
  return sims;
}

function useBandit(
  model: "epsilon-greedy" | "softmax",
  metric: "reward" | "cumulativeReward"
) {
  const selectedModel =
    model === "softmax"
      ? softmaxBanditTestResultData
      : epsilonGreedyBanditTestResultData;
  const preparedData = prepareData(selectedModel);
  return preparedData.map((sim) => ({
    id: `Sim ${sim.id}`,
    data: sim.trials.map((trial, index) => ({
      x: index,
      y: trial[metric],
    })),
  }));
}

export default function Home() {
  const chosenBanditAlgorithm = "softmax";
  const TITLE = "Bandit Observer";
  const data = useBandit(chosenBanditAlgorithm, "cumulativeReward");

  return (
    <div className={styles.container}>
      <Head>
        <title>{TITLE}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className={styles.header}>
        <h1>{TITLE}</h1>
      </header>
      <article className={styles.graphType}>
        <h3 className={styles.todo}>Todo</h3>
        <ul>
          <li>Algorithm selector</li>
          <li>Restart games, playback</li>
          <li>Managing Algorithm params</li>
        </ul>
      </article>
      <article className={styles.graphType}>
        <h2 className={styles.todo}>
          Accuracy of the {chosenBanditAlgorithm} bandit algorithm
        </h2>
        <p>
          The odds that our algorithm selects the best arm at any given point in
          time.
        </p>
      </article>
      <article className={styles.graphType}>
        <h2 className={styles.todo}>
          Performance of the {chosenBanditAlgorithm} bandit algorithm
        </h2>
        <p>
          Look at the average reward that our algorithm receives on each trial.
        </p>
      </article>
      <article className={styles.graphType}>
        <h2>Cumulative Reward</h2>
        <p>
          The total reward that an algorithm has won for us up until some fixed
          point in time.
        </p>
        <Line
          data={data}
          height={800 * (9 / 16)}
          width={800}
          margin={{ top: 50, right: 60, bottom: 50, left: 60 }}
          animate={true}
          enableSlices="x"
          axisBottom={{
            tickValues: new Array(Math.ceil(data[0].data.length / 25))
              .fill(0)
              .map((_, index) => index * 25),
          }}
        ></Line>
      </article>
    </div>
  );
}
